{"version":3,"sources":["helpurl.js","images/profile.jpg","components/LoginNav.js","components/UserInfoEdit.js","components/SignOutModal.js","components/UserInfo.js","pages/MyPage.js","pages/LoginMain.js","components/NoLoginNav.js","components/Introduce.js","components/Experience.js","components/GLogin.js","images/github.svg","components/LogIn.js","pages/LoginPage.js","components/SignUp.js","pages/SignupPage.js","pages/NoLoginMain.js","App.js","index.js"],"names":["BASEURL","axios","defaults","withCredentials","LoginNav","props","handleLogout","get","then","setState","userInfo","isLogin","window","location","state","this","promise","profile","name","to","className","src","profile_img","onClick","Component","withRouter","UserInfoEdit","handleInputUserEdit","e","target","value","handleUserEdit","key","nikname","password","birth","put","res","console","log","data","closeInput","handleLoginSuccess","catch","err","message","info","noInfo","type","what","placeholder","onChange","SignOutModal","checkmodal","isModalOpen","closemodal","handleSignout","delete","status","alert","open","close","signout","CheckModal","UserInfo","openInput","openModal","closeModal","isOpenPromise","isOpenName","isOpenPassword","isOpenBirth","email","sex","social","MyPage","LoginMain","exact","path","render","NoLoginNav","style","cursor","position","top","right","fontSize","scrollTo","width","height","paddingTop","backgroundColor","Introduce","Experience","borderTop","GLogin","responseGoogle","id","googleId","profileObj","provider","responseFail","error","clientId","buttonText","onSuccess","onFailure","LogIn","handleInputLogin","handleLogin","errorMessage","post","bind","onSubmit","preventDefault","href","githublogo","LoginPage","SignUp","handleInputSignup","handleSignup","history","push","errorEmail","SignupPage","NoLoginMain","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.4d43d8cb.chunk.js","sourcesContent":["export const BASEURL = \"https://m00m.cf\";\n// export const BASEURL = \"https://m00m.cf\";\n","export default __webpack_public_path__ + \"static/media/profile.e32d0956.jpg\";","import { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\n\nimport { BASEURL } from \"../helpurl\";\nimport \"../css/LoginNav.css\";\nimport profile_img from \"../images/profile.jpg\";\n\nimport axios from \"axios\";\naxios.defaults.withCredentials = true;\n\nclass LoginNav extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLogin: this.props.isLogin,\n      userInfo: this.props.userInfo,\n    };\n  }\n\n  // 로그아웃 버튼 클릭시 axios요청 함수\n  handleLogout = () => {\n    axios.get(`${BASEURL}/user/logout`).then(() => {\n      this.setState({ userInfo: null, isLogin: false });\n      // TODO : 페이지 전환 확인 redirect\n      // TODO: 다른 상태코드에 따른 분기가 필요\n      // this.props.history.push(\"/\");\n      window.location = \"/\";\n    });\n  };\n\n  // 로그인시 네비 바\n  render() {\n    const { promise, profile, name } = this.props.userInfo;\n    return (\n      <div>\n        <header>\n          <Link to=\"/\">\n            <button>로고</button>\n          </Link>\n          <span>\n            {promise ? `나의 다짐: ${promise}` : \"등록된 나의 다짐이 없습니다.\"}\n          </span>\n          <Link to=\"/\">\n            <button>\n              <img\n                className=\"navcircle\"\n                src={profile ? profile : profile_img}\n              ></img>\n              <p>{name}</p>\n            </button>\n          </Link>\n          <Link to=\"/mypage\">\n            <button>마이페이지</button>\n          </Link>\n          <button onClick={this.handleLogout}>로그아웃</button>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(LoginNav);\n","import { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nimport { BASEURL } from \"../helpurl\";\n\nimport axios from \"axios\";\naxios.defaults.withCredentials = true;\n\n// TODO: 수정할 수 있는 데이터 형식에 따른 에러 메세지 확인\nclass UserInfoEdit extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      promise: \"\",\n      nikname: \"\",\n      password: \"\",\n      birth: \"\",\n    };\n  }\n\n  // input 이벤트시 서버에게 보낼 정보 저장하는 함수\n  handleInputUserEdit = (e) => {\n    let target = e.target;\n    let value = target.value;\n    let name = target.name;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  // 저장 버튼 클릭시 회원정보 수정하는 axios요청 함수\n  handleUserEdit = (e) => {\n    let key = e.target.name;\n    const { promise, nikname, password, birth } = this.state;\n    axios\n      .put(`${BASEURL}/user/edit`, {\n        promise: promise,\n        name: nikname,\n        password: password,\n        birth: birth,\n      })\n      .then((res) => {\n        console.log(res.data);\n        // 수정 성공하면 인풋창 사라짐\n        this.props.closeInput(key);\n        // 수정 성공하면 그 유저정보를 다시 가지고 오는 함수\n        this.props.handleLoginSuccess();\n      })\n      // TODO: 다른 상태코드에 따른 분기가 필요\n      .catch((err) => {\n        console.log(err.message);\n      });\n  };\n\n  render() {\n    const { info, noInfo, name, type, what } = this.props;\n    return (\n      <>\n        <input\n          name={name}\n          type={type}\n          placeholder={info ? info : noInfo}\n          onChange={this.handleInputUserEdit}\n        />\n        <button name={what} onClick={this.handleUserEdit}>\n          저장\n        </button>\n      </>\n    );\n  }\n}\n\nexport default withRouter(UserInfoEdit);\n","import React, { Component } from \"react\";\nimport \"../css/SignOutModal.css\";\nimport axios from \"axios\";\nimport { withRouter } from \"react-router-dom\";\nimport { BASEURL } from \"../helpurl\";\nimport \"../css/CheckModal.css\";\nexport class SignOutModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isModalOpen: false,\n    };\n  }\n\n \n  checkmodal = () => {\n    this.setState({ isModalOpen: true });\n  };\n\n  closemodal = () => {\n    this.setState({ isModalOpen: false });\n  };\n  // 계정삭제 버튼 클릭시 axios요청 함수\n  handleSignout = () => {\n    axios\n      .delete(`${BASEURL}/user/signout`)\n      .then((res) => {\n        console.log(res);\n        // TODO : 페이지 전환 확인 redirect\n        // TODO: 다른 상태코드에 따른 분기가 필요\n        if (res.status === 200) {\n          // this.props.history.push(\"/\");\n          window.location = \"/\";\n        }\n      })\n      .catch((err) => {\n        alert(err);\n      });\n  };\n\n  render() {\n    const { open, close } = this.props;\n    return (\n      <>\n        {open ? (\n          <div className=\"modal\">\n            <div className=\"signout_modal\">\n              <div>홍길동님, 정말 계정을 삭제하실건가요?</div>\n              <div>moom 계정을 삭제하면</div>\n              <div>홍길동님이 생성한 모든 기록이 함께 사라집니다</div>\n\n              {/* 취소 버튼 */}\n              <button className=\"modal_close\" onClick={close}>\n                취소\n              </button>\n              {/* 삭제 버튼 */}\n              <button onClick={this.checkmodal}>계정 삭제</button>\n              \n              {/*삭제 버튼을 클릭하여 state가 바뀌면 아래 컴퍼넌트에 있는 \n              상항연산자에 의해 모달창이 render됨 */}\n              <CheckModal\n                open={this.state.isModalOpen}\n                close={this.closemodal}\n                signout={this.handleSignout}\n              />\n            </div>\n          </div>\n        ) : null}\n      </>\n    );\n  }\n}\nexport default withRouter(SignOutModal);\n\n// 모달창 추가 확인 함수형 컴퍼넌트 \nexport function CheckModal(props) {\n  // props확인 로그\n  // console.log(\"open : \", props);\n\n  return (\n    <>\n      {props.open ? (\n        <div className=\"check\">\n          <div className=\"check_modal\">\n            <div>정말로 삭제하시겠습니까?</div>\n\n            {/* SignOutModal에서 받은 handleSignout 함수 */}\n            <button onClick={props.signout}>네</button>\n            <button onClick={props.close}>아니오</button>\n          </div>\n        </div>\n      ) : null}\n    </>\n  );\n}\n","import { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nimport \"../css/UserInfo.css\";\nimport profile_img from \"../images/profile.jpg\";\nimport UserInfoEdit from \"./UserInfoEdit\";\nimport SignOutModal from \"./SignOutModal\";\n\nclass UserInfo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpenPromise: false,\n      isOpenName: false,\n      isOpenPassword: false,\n      isOpenBirth: false,\n      isModalOpen: false,\n    };\n  }\n\n  // 수정 버튼 클릭시 UserInfoEdit를 랜더하는 함수\n  openInput = (e) => {\n    let target = e.target;\n    let key = target.name;\n    this.setState({\n      [key]: true,\n    });\n  };\n\n  // 저장 버튼 클릭시 UserInfoEdit를 닫는 함수\n  closeInput = (key) => {\n    this.setState({\n      [key]: false,\n    });\n  };\n\n  // 회원탈퇴 버튼 클릭시 SignOutModal를 랜더하는 함수\n  openModal = () => {\n    this.setState({ isModalOpen: true });\n  };\n\n  // 취소 버튼 클릭시 SignOutModal를 닫는 함수\n  closeModal = () => {\n    this.setState({ isModalOpen: false });\n     \n  }\n\n  render() {\n    const {\n      profile,\n      name,\n      email,\n      promise,\n      birth,\n      sex,\n      type,\n    } = this.props.userInfo;\n\n    const { handleLoginSuccess } = this.props;\n\n    let { isOpenPromise, isOpenName, isOpenPassword, isOpenBirth } = this.state;\n\n    let social = false;\n    if (type === \"nomal\") {\n      social = true;\n    }\n\n    return (\n      <>\n        <h1>마이페이지</h1>\n        <div className=\"container\">\n          <div>\n            <span>프로필사진</span>\n            <img className=\"circle\" src={profile ? profile : profile_img}></img>\n          </div>\n          <div className=\"text_box\">\n            <li>\n              <span>닉네임:</span>\n              {isOpenName ? (\n                <UserInfoEdit\n                  info={name}\n                  noInfo=\"이름을 입력해주세요\"\n                  name=\"nikname\"\n                  type=\"text\"\n                  what=\"isOpenName\"\n                  closeInput={this.closeInput}\n                  handleLoginSuccess={handleLoginSuccess}\n                />\n              ) : (\n                <>\n                  <span>{name}</span>\n                  <button name=\"isOpenName\" onClick={this.openInput}>\n                    수정\n                  </button>\n                </>\n              )}\n            </li>\n            <li>\n              <span>이메일:</span>\n              <span className=\"span_email\">{email}</span>\n            </li>\n            <li>\n              <span>비밀번호 변경:</span>\n\n              {isOpenPassword ? (\n                <UserInfoEdit\n                  info=\"\"\n                  noInfo=\"변경할 비밀번호를 입력해주세요\"\n                  name=\"password\"\n                  type=\"password\"\n                  what=\"isOpenPassword\"\n                  closeInput={this.closeInput}\n                  handleLoginSuccess={handleLoginSuccess}\n                />\n              ) : (\n                <>\n                  {!social ? (\n                    \"비밀번호를 변경할 수 없습니다\"\n                  ) : (\n                    <>\n                      <span>변경할 비밀번호를 입력해주세요</span>\n                      <button name=\"isOpenPassword\" onClick={this.openInput}>\n                        수정\n                      </button>\n                    </>\n                  )}\n                </>\n              )}\n            </li>\n            <li>\n              <span>성별:</span>\n              <select name=\"sex\" value={sex}>\n                <option value=\"\">선택</option>\n                <option value=\"female\">여성</option>\n                <option value=\"male\">남성</option>\n              </select>\n              <button>지금은 수정할 수 없어요!</button>\n            </li>\n            <li>\n              <span>나의 다짐:</span>\n              {isOpenPromise ? (\n                <UserInfoEdit\n                  info={promise}\n                  noInfo=\"목표를 위한 다짐을 남겨보세요\"\n                  name=\"promise\"\n                  type=\"text\"\n                  what=\"isOpenPromise\"\n                  closeInput={this.closeInput}\n                  handleLoginSuccess={handleLoginSuccess}\n                />\n              ) : (\n                <>\n                  <span>\n                    {promise ? promise : \"목표를 위한 다짐을 남겨보세요\"}\n                  </span>\n                  <button name=\"isOpenPromise\" onClick={this.openInput}>\n                    수정\n                  </button>\n                </>\n              )}\n            </li>\n            <li>\n              <span>생년 월일:</span>\n              {isOpenBirth ? (\n                <UserInfoEdit\n                  info=\"\"\n                  noInfo=\"8자리 숫자로 입력해주세요.\"\n                  name=\"birth\"\n                  type=\"text\"\n                  what=\"isOpenBirth\"\n                  closeInput={this.closeInput}\n                  handleLoginSuccess={handleLoginSuccess}\n                />\n              ) : (\n                <>\n                  <span>{birth ? birth : \"생년월일을 설정하세요\"}</span>\n                  <button name=\"isOpenBirth\" onClick={this.openInput}>\n                    수정\n                  </button>\n                </>\n              )}\n            </li>\n          </div>\n        </div>\n        <div className=\"div_btn_signout\">\n          <button className=\"btn_signout\" onClick={this.openModal}>\n            moom 회원 탈퇴하기\n          </button>\n          <SignOutModal open={this.state.isModalOpen} close={this.closeModal} />\n        </div>\n      </>\n    );\n  }\n}\n\nexport default withRouter(UserInfo);\n","import { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nimport UserInfo from \"../components/UserInfo\";\n\nclass MyPage extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  // UserInfo 회원정보 요청(조회,수정,회원탈퇴)을 담은 컴포넌트 렌더\n  render() {\n    const { isLogin, userInfo, handleLoginSuccess } = this.props;\n    return (\n      <UserInfo\n        userInfo={userInfo}\n        isLogin={isLogin}\n        handleLoginSuccess={handleLoginSuccess}\n      />\n    );\n  }\n}\n\nexport default withRouter(MyPage);\n","import { Component } from \"react\";\nimport { withRouter, Route, Switch } from \"react-router-dom\";\n\nimport LoginNav from \"../components/LoginNav\";\n\nimport BasicBody from \"../components/BasicBody\";\nimport CustomBody from \"../components/CustomBody\";\nimport CertainBody from \"../components/CertainBody\";\n\nimport MyPage from \"../pages/MyPage\";\n\nclass LoginMain extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  // 로그인시 메인 페이지\n  render() {\n    const { isLogin, userInfo, handleLoginSuccess } = this.props;\n    return (\n      <div>\n        <LoginNav userInfo={userInfo} isLogin={isLogin} />\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={() => {\n              return <div>로그인시 메인입니다.</div>;\n            }}\n          ></Route>\n          <Route\n            path=\"/mypage\"\n            render={() => {\n              return (\n                <MyPage\n                  userInfo={userInfo}\n                  isLogin={isLogin}\n                  handleLoginSuccess={handleLoginSuccess}\n                />\n              );\n            }}\n          ></Route>\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(LoginMain);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst NoLoginNav = () => {\n  // 비로그인시 네비 바\n\n  //TODO: 고정 nav바 css style\n  const style = {\n    position: \"fixed\",\n    top: 0,\n    width: \"100%\",\n    height: \"50px\",\n    paddingTop: \"20px\",\n    backgroundColor: \"white\",\n  };\n\n  return (\n    <div>\n      {/* TODO: TOP 최상위버튼 */}\n      <button\n        style={{\n          cursor: \"pointer\",\n          position: \"fixed\",\n          top: 70,\n          right: 20,\n          fontSize: 30,\n        }}\n        onClick={() => window.scrollTo(0, 0)}\n      >\n        TOP\n      </button>\n      <header style={style}>\n        <Link to=\"/\">\n          <button>로고</button>\n        </Link>\n        <Link to=\"/login\">\n          <button>로그인</button>\n        </Link>\n        <Link to=\"/signup\">\n          <button>회원가입</button>\n        </Link>\n      </header>\n    </div>\n  );\n};\n\nexport default NoLoginNav;\n","import React, { Component } from \"react\";\nimport \"../css/Introduce.css\";\n\n\nexport class Introduce extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"intro_container\">\n          <div className=\"int_text\">우리의 서비스를 잘 나타내도록 소개</div>\n          <button className=\"int_btn\">moom 시작하기</button>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Introduce;\n","import React, { Component } from \"react\";\nimport \"../css/Experience.css\";\n\nexport class Experience extends Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      <>\n        <div\n          style={{\n            backgroundColor: \"teal\",\n            borderTop: \"6px solid blue\",\n          }}\n        >\n          Experience페이지입니다\n        </div>\n        <div className=\"exp_container\">\n          <div className=\"left_img\">좌측 이미지</div>\n          <div className=\"input_size\">사이즈 입력</div>\n          <div className=\"right_img\">우측 이미지</div>\n          <div className=\"info_size\">사이즈 정보</div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Experience;\n","import React, { Component } from 'react'\nimport { withRouter } from \"react-router-dom\";\nimport { GoogleLogin } from \"react-google-login\";\n\nclass GLogin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: \"\",\n      name: \"\",\n      provider: \"\",\n    };\n  }\n\n  responseGoogle = (res) => {\n    console.log(res);\n    this.setState({\n      id: res.googleId,\n      name: res.profileObj.name,\n      provider: \"google\",\n    });\n    console.log(this.state.id);\n    console.log(this.state.name);\n  };\n\n  responseFail = (err) => {\n    console.error(err);\n  };\n\n  render() {\n    return (\n      <div>\n        <GoogleLogin\n          clientId={\"580582710505-4pvoq5hh1sirblclblqe5ki810ac1dnn.apps.googleusercontent.com\"}\n          buttonText=\"Google\"\n          onSuccess={this.responseGoogle}\n          onFailure={this.responseFail}\n        />\n      </div>\n    );\n  }\n}\n\nexport default withRouter(GLogin);\n","export default __webpack_public_path__ + \"static/media/github.d1bb13ce.svg\";","import { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\n\nimport { BASEURL } from \"../helpurl\";\nimport GLogin from \"./GLogin\";\n\nimport \"../css/Login.css\";\nimport githublogo from \"../images/github.svg\";\n\nimport axios from \"axios\";\naxios.defaults.withCredentials = true;\n\n// TODO : react-github-login을 이용한 버튼 컴포넌트 HLogin 수정\n// import HLogin from \"./HLogin\";\nclass LogIn extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errorMessage: \"\",\n    };\n    this.handleInputLogin = this.handleInputLogin.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n  }\n\n  // input 이벤트시 서버에게 보낼 정보 저장하는 함수\n  handleInputLogin = (e) => {\n    const target = e.target;\n    const value = target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  // 로그인 버튼 클릭시 axios요청 함수\n  handleLogin = () => {\n    const { email, password } = this.state;\n    if (!email && !password) {\n      return this.setState({\n        errorMessage: \"Email과  Password를 입력해주세요\",\n      });\n    } else if (!email) {\n      return this.setState({ errorMessage: \"Email을 입력해주세요\" });\n    } else if (!password) {\n      return this.setState({ errorMessage: \"Password를 입력해주세요\" });\n    } else {\n      this.setState({ errorMessage: \"\" });\n    }\n    axios\n      .post(`${BASEURL}/user/login`, {\n        email: email,\n        password: password,\n      })\n      .then((res) => {\n        console.log(res.data);\n        this.props.handleLoginSuccess();\n      })\n      .catch((err) => {\n        console.log(err);\n        console.log(err.message);\n        // TODO : 페이지 전환 확인 redirect\n        // TODO: 다른 상태코드에 따른 분기가 필요\n        if (err.message === \"Request failed with status code 404\") {\n          this.setState({\n            errorMessage:\n              \"회원 정보를 찾을 수 없습니다. Email과  Password를 확인해주세요.\",\n          });\n        }\n      });\n  };\n\n  render() {\n    return (\n      <>\n        <center style={{ paddingTop: 30 }}>\n          <h1>LogIn 여기에 로고 들어갈 예정</h1>\n          <form onSubmit={(e) => e.preventDefault()}>\n            <div>\n              <p>이메일</p>\n              <input\n                name=\"email\"\n                type=\"email\"\n                placeholder=\"이메일을 입력해주세요\"\n                onChange={this.handleInputLogin}\n              ></input>\n            </div>\n            <div>\n              <p>비밀번호</p>\n              <input\n                name=\"password\"\n                type=\"password\"\n                placeholder=\"비밀번호를 입력해주세요\"\n                onChange={this.handleInputLogin}\n              ></input>\n            </div>\n            <div>\n              <button onClick={this.handleLogin}>Login</button>\n            </div>\n            {/* TODO : 에러메세지 재확인 */}\n            <div>{this.state.errorMessage}</div>\n          </form>\n          <div>\n            {/* 구글 : 현재페이지에서 연결하려면 location.href='address'를 이용한다. */}\n            <GLogin />\n            <div>\n              <button className=\"github-btn\">\n                <a href=\"https://github.com/login/oauth/authorize?client_id=c30e06847f78a8951b9c&redirect_uri=https://m00m.cf/data/gitoauth&&scope=user\">\n                  <div className=\"github-div\">\n                    <img className=\"github-img\" src={githublogo}></img>\n                  </div>\n                  <span className=\"github-span\">Github</span>\n                </a>\n              </button>\n            </div>\n          </div>\n\n          <div>\n            <Link to=\"/signup\">회원가입</Link>\n            <Link to=\"/\">비밀번호찾기</Link>\n          </div>\n        </center>\n      </>\n    );\n  }\n}\n\nexport default withRouter(LogIn);\n","import { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nimport LogIn from \"../components/LogIn\";\n\nclass LoginPage extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  // LogIn 로그인 요청을 담은 컴포넌트 렌더\n  render() {\n    return <LogIn handleLoginSuccess={this.props.handleLoginSuccess} />;\n  }\n}\n\nexport default withRouter(LoginPage);\n","import { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nimport { BASEURL } from \"../helpurl\";\n\nimport axios from \"axios\";\naxios.defaults.withCredentials = true;\n\n// TODO: 이메일 중복 버튼, 서버 요청, 에러 메세지 확인\nclass SignUp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      name: \"\",\n      password: \"\",\n      sex: \"\",\n      errorMessage: \"\",\n      errorEmail: \"\",\n    };\n    this.handleInputSignup = this.handleInputSignup.bind(this);\n    this.handleSignup = this.handleSignup.bind(this);\n  }\n\n  // input 이벤트시 서버에게 보낼 정보 저장하는 함수\n  handleInputSignup = (e) => {\n    const target = e.target;\n    const value = target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  // 회원가입 버튼 클릭시 axios요청 함수\n  handleSignup = () => {\n    const { email, name, password, sex } = this.state;\n    if (!email) {\n      return this.setState({ errorMessage: \"Email을 입력해주세요\" });\n    } else if (!name) {\n      return this.setState({ errorMessage: \"닉네임을 입력해주세요\" });\n    } else if (!password) {\n      return this.setState({ errorMessage: \"Password를 입력해주세요\" });\n    } else if (!sex) {\n      return this.setState({ errorMessage: \"성별을 선택해주세요\" });\n    } else {\n      this.setState({ errorMessage: \"\" });\n    }\n    axios\n      .post(`${BASEURL}/user/signup`, {\n        email: email,\n        name: name,\n        password: password,\n        sex: sex,\n      })\n      .then((res) => {\n        console.log(res);\n        // TODO : 페이지 전환 확인 redirect\n        // TODO: 다른 상태코드에 따른 분기가 필요\n        this.props.history.push(\"/login\");\n      })\n      .catch((err) => {\n        console.log(err);\n        console.log(err.message);\n        if (err.message === \"Request failed with status code 409\") {\n          this.setState({\n            errorEmail: \"이미 존재하는 이메일입니다.\",\n          });\n        }\n      });\n  };\n\n  render() {\n    return (\n      <>\n        <center style={{ paddingTop: 50 }}>\n          <p>회원가입</p>\n          <p>moom에 오신 것을 환영합니다.^^</p>\n          <form onSubmit={(e) => e.preventDefault()}>\n            <div>\n              <p>이메일</p>\n              <input\n                name=\"email\"\n                type=\"email\"\n                placeholder=\"이메일을 입력해주세요\"\n                onChange={this.handleInputSignup}\n              ></input>\n              <button>중복확인</button>\n            </div>\n            {/* TODO : 에러메세지 재확인 */}\n            <div>{this.state.errorEmail}</div>\n            <p>닉네임</p>\n            <input\n              name=\"name\"\n              type=\"text\"\n              placeholder=\"닉네임을 입력해주세요\"\n              onChange={this.handleInputSignup}\n            ></input>\n            <p>비밀번호</p>\n            <input\n              name=\"password\"\n              type=\"password\"\n              placeholder=\"비밀번호를 입력해주세요\"\n              onChange={this.handleInputSignup}\n            ></input>\n            <p>성별</p>\n            <select\n              name=\"sex\"\n              value={this.state.sex}\n              onChange={this.handleInputSignup}\n            >\n              <option value=\"\">선택</option>\n              <option value=\"female\">여성</option>\n              <option value=\"male\">남성</option>\n            </select>\n            <div>\n              <button onClick={this.handleSignup}>가입하기</button>\n            </div>\n            {/* TODO : 에러메세지 재확인 */}\n            <div>{this.state.errorMessage}</div>\n          </form>\n        </center>\n      </>\n    );\n  }\n}\n\nexport default withRouter(SignUp);\n","import { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nimport SignUp from \"../components/SignUp\";\n\nclass SignupPage extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  // SignUp 회원가입 요청을 담은 컴포넌트 렌더\n  render() {\n    return <SignUp />;\n  }\n}\n\nexport default withRouter(SignupPage);\n","import { Component } from \"react\";\nimport { withRouter, Route, Switch } from \"react-router-dom\";\n\nimport NoLoginNav from \"../components/NoLoginNav\";\nimport Introduce from \"../components/Introduce\";\nimport Experience from \"../components/Experience\";\nimport LoginPage from \"../pages/LoginPage\";\nimport SignupPage from \"../pages/SignupPage\";\n\nclass NoLoginMain extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  // 비로그인시 페인 페이지\n  render() {\n    return (\n      <div>\n        <NoLoginNav />\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={() => {\n              return (\n                <>\n                  <div>\n                    <Introduce />\n                  </div>\n                  <div>\n                    <Experience />\n                  </div>\n                </>\n              );\n            }}\n          ></Route>\n          <Route\n            path=\"/login\"\n            render={() => {\n              return (\n                <LoginPage handleLoginSuccess={this.props.handleLoginSuccess} />\n              );\n            }}\n          ></Route>\n          <Route\n            path=\"/signup\"\n            render={() => {\n              return <SignupPage />;\n            }}\n          ></Route>\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(NoLoginMain);\n","import { Component } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport { BASEURL } from \"./helpurl\";\nimport LoginMain from \"./pages/LoginMain\";\nimport NoLoginMain from \"./pages/NoLoginMain\";\n\nimport axios from \"axios\";\naxios.defaults.withCredentials = true;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLogin: false,\n      userInfo: null,\n    };\n  }\n\n  // App.js가 실행될 때 자동 실행되는 함수\n  componentDidMount() {\n    this.handleLoginSuccess();\n  }\n\n  // 로그인 여부에 따라 setState로 유저정보 저장하는 함수\n  handleLoginSuccess = () => {\n    axios\n      .get(`${BASEURL}/user/edit`)\n      .then((res) => {\n        this.setState({ isLogin: true, userInfo: res.data });\n        // TODO : 페이지 전환 확인 redirect\n        // TODO: 다른 상태코드에 따른 분기가 필요\n        // this.props.history.push(\"/\");\n        // window.location = \"/\";\n      })\n      .catch((err) => {\n        console.log(err);\n        console.log(err.message);\n        if (err.message === \"Request failed with status code 404\") {\n          this.setState({ isLogin: false, userInfo: null });\n          // this.props.history.push(\"/login\");\n        }\n      });\n  };\n\n  // 로그인 여부에 따라 다른 페이지 렌더\n  render() {\n    const { isLogin, userInfo } = this.state;\n    return (\n      <div>\n        <Switch>\n          <Route\n            path=\"/\"\n            render={() => {\n              if (isLogin) {\n                return (\n                  <LoginMain\n                    userInfo={userInfo}\n                    isLogin={isLogin}\n                    handleLoginSuccess={this.handleLoginSuccess.bind(this)}\n                  ></LoginMain>\n                );\n              } else {\n                return (\n                  <NoLoginMain\n                    handleLoginSuccess={this.handleLoginSuccess.bind(this)}\n                  ></NoLoginMain>\n                );\n              }\n            }}\n          ></Route>\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}